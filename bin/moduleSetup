#!/usr/bin/env ruby

require 'ppcurses'


require_relative '../lib/rb/tallyman'

script_location = File.expand_path File.dirname(__FILE__)
@domain_root = script_location + '/../data/modules/'


@domain_manager = DomainManager.new(@domain_root)


@config_loader = Tallyman::ConfigLoader.new
@config = @config_loader.load
@data_changed=false

class ConfigMenuItem < PPCurses::MenuItem

  attr_accessor :enter_action

  def handle_key(key)

    if key == ' ' and @selectable
      toggle_on_off_state
      call_target
      return true
    end

    if key == PPCurses::ENTER
      @enter_action.execute
      return true
    end

    false
  end

end


def receive_message(menu_item)
  @data_changed=true

  title = menu_item.title

  if menu_item.state == PPCurses::PP_ON_STATE
    @config.enable_domain(title)
  else
    @config.disable_domain(title)
  end

end


def display_modules

  module_list = []

  @domain_manager.domains.each do |domain|
    item = ConfigMenuItem.new(domain.module_name )
    item.selectable=true
    if @config.domain_enabled?(domain.module_name)
      item.state=PPCurses::PP_ON_STATE
    end
    item.target=method(:receive_message)
    item.enter_action = domain.config_action(@config)
    module_list.push( item )

  end

  module_menu = PPCurses::Menu.new( module_list, nil )
  module_menu.show
  module_menu.menu_selection

  module_menu.close
end

# TODO -- add enable modules title on screen

screen = PPCurses::Screen.new
screen.run { display_modules }

if @data_changed
  @config_loader.save(@config)
end


puts 'TODO -- push this as a config option in main interface.'