#!/usr/bin/ruby

# Curses reference:
# http://www.ruby-doc.org/stdlib-1.9.3/libdoc/curses/rdoc/Curses.html

require './ppcurses/Menu.rb'
require './ppcurses/RadioMenu.rb'
require './ppcurses/CompositeMenu.rb'
require './ppcurses/Actions.rb'


require 'rubygems'
require "curses"
require "sqlite3"
include Curses

load '../config/config.properties'

init_screen
begin
  Curses.raw
  clear
  curs_set(0) # Makes cursor invisible
  noecho
  cbreak
  start_color


  db = SQLite3::Database.open @dbName

  liftRepMenu = RadioMenu.new( @liftReps , nil )
  liftTypeMenu = Menu.new( @lifts, nil )

  liftsMenu = CompositeMenu.new( liftTypeMenu, liftRepMenu )
  addLiftAction = LiftAction.new( liftTypeMenu, liftRepMenu, db )

  liftTypeMenu.setGlobalAction(addLiftAction)

  bookAction = InsertSQLDataAction.new( [GetStringAction.new("Book title: "), 
                                   GetStringAction.new("Author: "),
                                   GetIntegerAction.new("Number of pages: "),
                                   GetBooleanAction.new("Digital? "),
                                   ], 
    "INSERT into books(title, author, pages, digital) values ('%s', '%s', %s, %s)", db )

  musicAction = InsertSQLDataAction.new( 
                  [GetEnumeratedStringAction.new("Media Type? ", ["CD", "Vinyl", "MP3"] ), 
                   GetStringAction.new("Artist: "),
                   GetStringAction.new("Album Title: "),
                   GetIntegerAction.new("Price: "),
                   GetBooleanAction.new("Used? "),
                  ], 
    "INSERT into music(media, artist, albumTitle, price, used)" +
    " values ('%s', '%s', '%s', %s, %s)", db )



  liftsAction = ShowMenuAction.new(liftsMenu)  

  mainMenu = Menu.new( @mainMenuValues , 
                       [ bookAction, liftsAction, musicAction ] )

  mainMenu.show()
  mainMenu.getMenuSelection() 
  
  mainMenu.close()

rescue SystemExit, Interrupt
  # Empty Catch block so ruby doesn't puke out
  # a stack trace when CTRL-C is used
ensure
  close_screen
  db.close if db
end
